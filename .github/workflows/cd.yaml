name: Bloggy-cd

on:
  push:
    branches: ['main']

permissions:
  contents: write
  pull-requests: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Docker image for frontend
        run: docker build --build-arg VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }} -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-blog:${{ github.sha }} ./frontend
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-blog:${{ github.sha }}

  build-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Docker image for backend
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-blog:${{ github.sha }} ./backend
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-blog:${{ github.sha }}

  update-compose:
    needs: [detect-changes, build-frontend, build-backend]
    if: always() && (needs.detect-changes.outputs.backend_changed == 'true' || needs.detect-changes.outputs.frontend_changed == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check build results
        id: build_status
        run: |
          echo "Frontend changed: ${{ needs.detect-changes.outputs.frontend_changed }}"
          echo "Backend changed: ${{ needs.detect-changes.outputs.backend_changed }}"
          echo "Frontend build result: ${{ needs.build-frontend.result }}"
          echo "Backend build result: ${{ needs.build-backend.result }}"
          
          # Determine what should be updated
          FRONTEND_SUCCESS="false"
          BACKEND_SUCCESS="false"
          
          if [[ "${{ needs.detect-changes.outputs.frontend_changed }}" == "true" && "${{ needs.build-frontend.result }}" == "success" ]]; then
            FRONTEND_SUCCESS="true"
          fi
          
          if [[ "${{ needs.detect-changes.outputs.backend_changed }}" == "true" && "${{ needs.build-backend.result }}" == "success" ]]; then
            BACKEND_SUCCESS="true"
          fi
          
          echo "frontend_update=$FRONTEND_SUCCESS" >> $GITHUB_OUTPUT
          echo "backend_update=$BACKEND_SUCCESS" >> $GITHUB_OUTPUT
          
          # Create summary
          if [[ "$FRONTEND_SUCCESS" == "true" && "$BACKEND_SUCCESS" == "true" ]]; then
            echo "Both frontend and backend will be updated" >> $GITHUB_STEP_SUMMARY
          elif [[ "$FRONTEND_SUCCESS" == "true" ]]; then
            echo "Only frontend will be updated (backend build failed or skipped)" >> $GITHUB_STEP_SUMMARY
          elif [[ "$BACKEND_SUCCESS" == "true" ]]; then
            echo "Only backend will be updated (frontend build failed or skipped)" >> $GITHUB_STEP_SUMMARY
          else
            echo "No updates will be made (all builds failed)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Update frontend image in compose.yaml
        if: steps.build_status.outputs.frontend_update == 'true'
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: compose.yaml
          propertyPath: 'services.frontend.image'
          value: '${{ secrets.DOCKERHUB_USERNAME }}/frontend-blog:${{ github.sha }}'
          commitChange: true
          createPR: false
          targetBranch: main
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: .
          commitUserName: github-actions[bot]
          commitUserEmail: 41898282+github-actions[bot]@users.noreply.github.com
          masterBranchName: main
          quotingType: ''
          force: false

      - name: Update backend image in compose.yaml
        if: steps.build_status.outputs.backend_update == 'true'
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: compose.yaml
          propertyPath: 'services.backend.image'
          value: '${{ secrets.DOCKERHUB_USERNAME }}/backend-blog:${{ github.sha }}'
          commitChange: true
          createPR: false
          targetBranch: main
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: .
          commitUserName: github-actions[bot]
          commitUserEmail: 41898282+github-actions[bot]@users.noreply.github.com
          masterBranchName: main
          quotingType: ''
          force: false

      - name: Report partial failure
        if: |
          (needs.detect-changes.outputs.frontend_changed == 'true' && needs.build-frontend.result != 'success') ||
          (needs.detect-changes.outputs.backend_changed == 'true' && needs.build-backend.result != 'success')
        run: |
          echo "⚠️ Warning: Some builds failed!" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.detect-changes.outputs.frontend_changed }}" == "true" && "${{ needs.build-frontend.result }}" != "success" ]]; then
            echo "- Frontend build failed - compose.yaml not updated for frontend" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ "${{ needs.detect-changes.outputs.backend_changed }}" == "true" && "${{ needs.build-backend.result }}" != "success" ]]; then
            echo "- Backend build failed - compose.yaml not updated for backend" >> $GITHUB_STEP_SUMMARY
          fi
          echo "Only successful builds were deployed." >> $GITHUB_STEP_SUMMARY

  deploy-to-ec2:
    needs: [detect-changes, update-compose]
    if: always() && needs.update-compose.result == 'success' && (needs.detect-changes.outputs.backend_changed == 'true' || needs.detect-changes.outputs.frontend_changed == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Copy compose.yaml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "compose.yaml"
          target: "~/folder/"
          
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "🚀 Starting deployment on EC2..."
            cd ~/folder
            
            echo "📋 Updated compose.yaml content:"
            cat compose.yaml
            
            # Stop existing containers
            echo "🛑 Stopping existing containers..."
            sudo docker-compose down || true
            
            # Pull latest images
            echo "📦 Pulling latest Docker images..."
            sudo docker-compose pull
            
            # Start containers
            echo "🔄 Starting containers..."
            sudo docker-compose up -d
            
            # Check status
            echo "✅ Deployment complete! Container status:"
            sudo docker-compose ps